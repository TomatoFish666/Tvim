
""""""""""""""""""""""""""""""""""""""""""""""""""
" 选项设置
""""""""""""""""""""""""""""""""""""""""""""""""""
" 下面三个命令合并成一条
filetype plugin indent on
" 开启文件类型侦测
"filetype on
" 根据侦测到的不同类型加载对应的插件
"filetype plugin on
" 根据不同类型的文件定义不同的缩进格式
"filetype indent on

" 开启语法高亮功能
syntax enable
" 允许用指定语法高亮配色方案替换默认方案
syntax on

" 开启实时搜索功能
set incsearch

" 搜索时大小写不敏感
set ignorecase

" 关闭兼容模式
set nocompatible

" vim自身命令行模式智能补全 set wildmenu

" 将制表符扩展为空格
set expandtab
" 设置编辑时制表符占用空格数
set tabstop=4
" 设置格式化时制表符占用空格数
set shiftwidth=4
" 让vim把连续数量的空格视为一个制表符
set softtabstop=4

" 基于缩进或语法进行代码折叠
" za打开或关闭当前折叠，zM关闭所有折叠，zR打开所有折叠
"set foldmethod=indent
set foldmethod=syntax
" 启动 vim 时关闭折叠代码
set nofoldenable


""""""""""""""""""""""""""""""""""""""""""""""""""
" 常用快捷键映射
""""""""""""""""""""""""""""""""""""""""""""""""""

" 定义leader键 <leader>
let mapleader=";"

" 定义快捷键到行首和行尾
nnoremap <leader>h 0
nnoremap <leader>l $

" 设置复制粘贴要先 sudo apt-get install vim-gnome
" 设置快捷键将选中文本块复制到系统剪贴板
vnoremap <leader>y "+y
" 设置快捷键将系统剪贴板内容粘贴至vim
nnoremap <leader>p "+p

" 定义快捷键保存当前窗口内容
"nnoremap <leader>w :w<cr>
" 定义快捷键关闭当前分割窗口
"nnoremap <leader>q :q<cr>
" 定义快捷键保存所有窗口内容并退出vim
"nnoremap <leader>WQ :wa<cr>:q<cr>
" 不做任何保存，直接退出vim
"nnoremap <leader>Q :qa!<cr>

" 一次遍历子窗口
"nnoremap nw <c-w><c-w>
" 跳转至上方窗口
"nnoremap <leader>kw <c-w>k
" 跳转至下方窗口
"nnoremap <leader>jw <c-w>j
" 跳转至左方窗口
"nnoremap <leader>hw <c-w>h
" 跳转至右方窗口
"nnoremap <leader>lw <c-w>l

" 定义快捷键在结对符号之间跳转，助记pair 
"nnoremap <leader>pa %  " 有冲突，以后再设置


""""""""""""""""""""""""""""""""""""""""""""""""""
" 界面美化
""""""""""""""""""""""""""""""""""""""""""""""""""

" 禁止光标闪烁
"set gcr=a:block-blinkon0

" 禁止显示滚动条
"set guioptions-=l
"set guioptions-=L
"set guioptions-=r
"set guioptions-=R
" 禁止显示菜单和工具条
"set guioptions-=m
"set guioptions-=T

" 总是显示状态栏
set laststatus=2
" 状态栏中显示光标当前位置
set ruler

" 开启行号显示
set number

" 高亮显示当前行/列
set cursorline
set cursorcolumn

" 高亮显示搜索结果
set hlsearch

" 支持256色
set t_Co=256

" 禁止折行
set nowrap

 
""""""""""""""""""""""""""""""""""""""""""""""""""
" 插件配置
""""""""""""""""""""""""""""""""""""""""""""""""""

" pathogen{
" 以后生成帮助文档 :Helptags
execute pathogen#infect()
" }

"powerline{
"set guifont=PowerlineSymbols\ for\ Powerline
set encoding=utf-8
let g:Powerline_symbols='compatible'
"let g:Powerline_symbols='fancy'
let g:Powerline_colorscheme='solarized256'
" }

" vim-colorschemes{
set background=dark
"colorscheme solarized
"colorscheme thor
"colorscheme tomatosoup
"colorscheme Tomorrow-Night-Bright
"colorscheme Tomorrow-Night-Eighties
colorscheme Tomorrow-Night
"colorscheme torte
"colorscheme twilight256
"colorscheme twitchy
" }

" nerdtree{
" 设置显示/隐藏nerdtree子窗口的快捷键
nnoremap <F2> :NERDTreeToggle<cr>
" 设置nerdtree子窗口在主编辑区的左边，注意大小写
let NERDTreeWinPos="left"
" 设置nerdtree子窗口宽度
let nerdtreeWinsize=36
" }

" c.vim{

" }

" a.vim{
" *.cpp 和 *h 间切换
nnoremap <leader>ch :A<cr>
" 子窗口中显示 *.cpp 或 *.h
nnoremap <leader>sch :AS<cr>
" }

" youcompleteme{
" 有问题的！！！
let g:ycm_global_ycm_extra_conf = '/home/tomatofish/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'  
" }

" tagbar{
" 设置显示/隐藏标签列表子窗口的快捷键
nnoremap <F4> :TagbarToggle<cr>
" 设置tagbar子窗口的位置出现在主编辑区的右边
let tagbar_right=1
" 设置标签列表子窗口的宽度
let tagbar_width=36
" 设置在tagbar子窗口中不显示冗余帮助信息
let g:tagbar_compact=1
" }

" nerdcommenter{
" <leader>cc
" <leader>c<space>
" }

" minibufexplorer{
" 显式/隐藏 minibufexplorer 窗口
nnoremap <F3> :MBEToggle<cr>
" buffer切换快捷键
nnoremap <c-l> :MBEbn<cr>
nnoremap <c-h> :MBEbp<cr>
" }

" syntastic{
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
" }

""""""""""""""""""""""""""""""""""""""""""""""""""
"编译运行调试
""""""""""""""""""""""""""""""""""""""""""""""""""

"sh,c,cpp,py 按F5编译运行
map <F5> :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    if &filetype == 'sh'
        :!./%
    elseif &filetype == 'c'
        exec "!gcc % -o %< -lm"
        exec "! ./%<"
    elseif &filetype == 'cpp'
        exec "!g++ % -o %< -lm"
        exec "! ./%<"
    elseif &filetype == 'python'
        exec "!python3 %"
    endif
endfunc
